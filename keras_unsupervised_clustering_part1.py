# -*- coding: utf-8 -*-
"""“Keras_Unsupervised Clustering_part1.ipynb”的副本

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZcoAM5uq6KPq4zFckIPL8-NDVMCEOqhQ

How to do Unsupervised Clustering with Keras | DLology Blog

https://github.com/Tony607/Keras_Deep_Clustering

https://www.dlology.com/blog/how-to-do-unsupervised-clustering-with-keras/

https://www.leiphone.com/news/201806/ItBuEPkqPZR378rY.html

Can Keras be used to build clustering models

https://datascience.stackexchange.com/questions/31435/can-keras-be-used-to-build-clustering-models
"""

import numpy as np
from sklearn.metrics import normalized_mutual_info_score, adjusted_rand_score

nmi = normalized_mutual_info_score
ari = adjusted_rand_score


def acc(y_true, y_pred):
    """
    Calculate clustering accuracy. Require scikit-learn installed
    # Arguments
        y: true labels, numpy.array with shape `(n_samples,)`
        y_pred: predicted labels, numpy.array with shape `(n_samples,)`
    # Return
        accuracy, in [0,1]
    """
    y_true = y_true.astype(np.int64)
    assert y_pred.size == y_true.size
    D = max(y_pred.max(), y_true.max()) + 1
    w = np.zeros((D, D), dtype=np.int64)
    for i in range(y_pred.size):
        w[y_pred[i], y_true[i]] += 1
    from sklearn.utils.linear_assignment_ import linear_assignment
    ind = linear_assignment(w.max() - w)
    return sum([w[i, j] for i, j in ind]) * 1.0 / y_pred.size

from sklearn.cluster import KMeans
import numpy as np
from keras.datasets import mnist



(x_train, y_train), (x_test, y_test) = mnist.load_data()

x = np.concatenate((x_train, x_test))

y = np.concatenate((y_train, y_test))

x = x.reshape((x.shape[0], -1))

x = np.divide(x, 255.)

# 10 clusters

n_clusters = len(np.unique(y))

# Runs in parallel 4 CPUs

kmeans = KMeans(n_clusters=n_clusters, n_init=20, n_jobs=4)

# Train K-Means.

y_pred_kmeans = kmeans.fit_predict(x)

# Evaluate the K-Means clustering accuracy.

acc(y, y_pred_kmeans)
#metrics.acc(y, y_pred_kmeans)

# 準確率只有0.5323571428571429
# 請參看上述文章提高準確率的另一種作法